"""empty message

Revision ID: 79212acbf5c4
Revises: 
Create Date: 2022-07-14 16:17:04.436862

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '79212acbf5c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('technology',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('technology', sa.String(), nullable=False),
    sa.Column('tech_code', sa.String(), nullable=False),
    sa.Column('fuel_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tech_code', 'fuel_code')
    )
    op.create_index(op.f('ix_technology_id'), 'technology', ['id'], unique=False)
    op.create_table('user',
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('activate_token', sa.String(), nullable=True),
    sa.Column('reset_password_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('subject'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('subject')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=False)
    op.create_index(op.f('ix_user_subject'), 'user', ['subject'], unique=False)
    op.create_table('agreements_agreement',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('declined', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_proposed_subject', sa.String(), nullable=False),
    sa.Column('user_from_subject', sa.String(), nullable=False),
    sa.Column('user_to_subject', sa.String(), nullable=False),
    sa.Column('facility_gsrn', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('state', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'CANCELLED', 'WITHDRAWN', name='agreementstate'), nullable=False),
    sa.Column('date_from', sa.Date(), nullable=False),
    sa.Column('date_to', sa.Date(), nullable=False),
    sa.Column('technologies', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('unit', sa.Enum('Wh', 'KWh', 'MWh', 'GWh', name='unit'), nullable=True),
    sa.Column('amount_percent', sa.Integer(), nullable=True),
    sa.Column('limit_to_consumption', sa.Boolean(), nullable=True),
    sa.Column('transfer_priority', sa.Integer(), nullable=True),
    sa.Column('proposal_note', sa.String(), nullable=True),
    sa.CheckConstraint("(limit_to_consumption = 'f' and amount is not null and unit is not null) or (limit_to_consumption = 't')", name='limit_to_consumption_OR_amount_and_unit'),
    sa.CheckConstraint('(amount_percent IS NULL) OR (amount_percent >= 1 AND amount_percent <= 100)', name='amount_percent_is_NULL_or_between_1_and_100'),
    sa.ForeignKeyConstraint(['user_from_subject'], ['user.subject'], ),
    sa.ForeignKeyConstraint(['user_proposed_subject'], ['user.subject'], ),
    sa.ForeignKeyConstraint(['user_to_subject'], ['user.subject'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_agreements_agreement_id'), 'agreements_agreement', ['id'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_public_id'), 'agreements_agreement', ['public_id'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_state'), 'agreements_agreement', ['state'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_technologies'), 'agreements_agreement', ['technologies'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_user_from_subject'), 'agreements_agreement', ['user_from_subject'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_user_proposed_subject'), 'agreements_agreement', ['user_proposed_subject'], unique=False)
    op.create_index(op.f('ix_agreements_agreement_user_to_subject'), 'agreements_agreement', ['user_to_subject'], unique=False)
    op.create_table('ledger_batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('state', sa.Enum('PENDING', 'SUBMITTED', 'DECLINED', 'COMPLETED', name='batchstate'), nullable=False),
    sa.Column('submitted', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_subject', sa.String(), nullable=False),
    sa.Column('handle', sa.String(), nullable=True),
    sa.Column('poll_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_subject'], ['user.subject'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ledger_batch_id'), 'ledger_batch', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_batch_user_subject'), 'ledger_batch', ['user_subject'], unique=False)
    op.create_table('meteringpoint',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('gsrn', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('PRODUCTION', 'CONSUMPTION', name='meteringpointtype'), nullable=False),
    sa.Column('sector', sa.String(), nullable=False),
    sa.Column('tech_code', sa.String(), nullable=True),
    sa.Column('fuel_code', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('retiring_priority', sa.Integer(), nullable=True),
    sa.Column('street_code', sa.String(), nullable=True),
    sa.Column('street_name', sa.String(), nullable=True),
    sa.Column('building_number', sa.String(), nullable=True),
    sa.Column('city_name', sa.String(), nullable=True),
    sa.Column('postcode', sa.String(), nullable=True),
    sa.Column('municipality_code', sa.String(), nullable=True),
    sa.Column('subject', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['subject'], ['user.subject'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gsrn')
    )
    op.create_index(op.f('ix_meteringpoint_gsrn'), 'meteringpoint', ['gsrn'], unique=False)
    op.create_index(op.f('ix_meteringpoint_id'), 'meteringpoint', ['id'], unique=False)
    op.create_index(op.f('ix_meteringpoint_public_id'), 'meteringpoint', ['public_id'], unique=False)
    op.create_index(op.f('ix_meteringpoint_sector'), 'meteringpoint', ['sector'], unique=False)
    op.create_index(op.f('ix_meteringpoint_subject'), 'meteringpoint', ['subject'], unique=False)
    op.create_index(op.f('ix_meteringpoint_type'), 'meteringpoint', ['type'], unique=False)
    op.create_table('measurement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('gsrn', sa.String(), nullable=False),
    sa.Column('begin', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gsrn'], ['meteringpoint.gsrn'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gsrn', 'begin')
    )
    op.create_index(op.f('ix_measurement_begin'), 'measurement', ['begin'], unique=False)
    op.create_index(op.f('ix_measurement_gsrn'), 'measurement', ['gsrn'], unique=False)
    op.create_index(op.f('ix_measurement_id'), 'measurement', ['id'], unique=False)
    op.create_table('meteringpoint_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meteringpoint_id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['meteringpoint_id'], ['meteringpoint.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meteringpoint_id', 'tag')
    )
    op.create_index(op.f('ix_meteringpoint_tag_id'), 'meteringpoint_tag', ['id'], unique=False)
    op.create_index(op.f('ix_meteringpoint_tag_meteringpoint_id'), 'meteringpoint_tag', ['meteringpoint_id'], unique=False)
    op.create_index(op.f('ix_meteringpoint_tag_tag'), 'meteringpoint_tag', ['tag'], unique=False)
    op.create_table('ggo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_id', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('issue_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expire_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('begin', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('sector', sa.String(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('measurement_id', sa.Integer(), nullable=True),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('tech_code', sa.String(), nullable=True),
    sa.Column('fuel_code', sa.String(), nullable=True),
    sa.Column('issued', sa.Boolean(), nullable=False),
    sa.Column('stored', sa.Boolean(), nullable=False),
    sa.Column('retired', sa.Boolean(), nullable=False),
    sa.Column('issue_gsrn', sa.String(), nullable=True),
    sa.Column('retire_gsrn', sa.String(), nullable=True),
    sa.Column('retire_measurement_id', sa.Integer(), nullable=True),
    sa.Column('emissions', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['issue_gsrn'], ['meteringpoint.gsrn'], ),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurement.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['ggo.id'], ),
    sa.ForeignKeyConstraint(['retire_gsrn'], ['meteringpoint.gsrn'], ),
    sa.ForeignKeyConstraint(['retire_measurement_id'], ['measurement.id'], ),
    sa.ForeignKeyConstraint(['subject'], ['user.subject'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('measurement_id')
    )
    op.create_index(op.f('ix_ggo_begin'), 'ggo', ['begin'], unique=False)
    op.create_index(op.f('ix_ggo_id'), 'ggo', ['id'], unique=False)
    op.create_index(op.f('ix_ggo_issue_gsrn'), 'ggo', ['issue_gsrn'], unique=False)
    op.create_index(op.f('ix_ggo_issued'), 'ggo', ['issued'], unique=False)
    op.create_index(op.f('ix_ggo_measurement_id'), 'ggo', ['measurement_id'], unique=False)
    op.create_index(op.f('ix_ggo_parent_id'), 'ggo', ['parent_id'], unique=False)
    op.create_index(op.f('ix_ggo_public_id'), 'ggo', ['public_id'], unique=False)
    op.create_index(op.f('ix_ggo_retire_gsrn'), 'ggo', ['retire_gsrn'], unique=False)
    op.create_index(op.f('ix_ggo_retired'), 'ggo', ['retired'], unique=False)
    op.create_index(op.f('ix_ggo_sector'), 'ggo', ['sector'], unique=False)
    op.create_index(op.f('ix_ggo_stored'), 'ggo', ['stored'], unique=False)
    op.create_index(op.f('ix_ggo_subject'), 'ggo', ['subject'], unique=False)
    op.create_table('ledger_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('batch_id', sa.Integer(), nullable=False),
    sa.Column('parent_ggo_id', sa.Integer(), nullable=False),
    sa.Column('begin', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meteringpoint_id', sa.Integer(), nullable=True),
    sa.Column('measurement_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['batch_id'], ['ledger_batch.id'], ),
    sa.ForeignKeyConstraint(['measurement_id'], ['measurement.id'], ),
    sa.ForeignKeyConstraint(['meteringpoint_id'], ['meteringpoint.id'], ),
    sa.ForeignKeyConstraint(['parent_ggo_id'], ['ggo.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('batch_id', 'order'),
    sa.UniqueConstraint('parent_ggo_id')
    )
    op.create_index(op.f('ix_ledger_transaction_batch_id'), 'ledger_transaction', ['batch_id'], unique=False)
    op.create_index(op.f('ix_ledger_transaction_id'), 'ledger_transaction', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_transaction_parent_ggo_id'), 'ledger_transaction', ['parent_ggo_id'], unique=False)
    op.create_table('ledger_split_target',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('ggo_id', sa.Integer(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ggo_id'], ['ggo.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['ledger_transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ggo_id')
    )
    op.create_index(op.f('ix_ledger_split_target_ggo_id'), 'ledger_split_target', ['ggo_id'], unique=False)
    op.create_index(op.f('ix_ledger_split_target_id'), 'ledger_split_target', ['id'], unique=False)
    op.create_index(op.f('ix_ledger_split_target_reference'), 'ledger_split_target', ['reference'], unique=False)
    op.create_index(op.f('ix_ledger_split_target_transaction_id'), 'ledger_split_target', ['transaction_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ledger_split_target_transaction_id'), table_name='ledger_split_target')
    op.drop_index(op.f('ix_ledger_split_target_reference'), table_name='ledger_split_target')
    op.drop_index(op.f('ix_ledger_split_target_id'), table_name='ledger_split_target')
    op.drop_index(op.f('ix_ledger_split_target_ggo_id'), table_name='ledger_split_target')
    op.drop_table('ledger_split_target')
    op.drop_index(op.f('ix_ledger_transaction_parent_ggo_id'), table_name='ledger_transaction')
    op.drop_index(op.f('ix_ledger_transaction_id'), table_name='ledger_transaction')
    op.drop_index(op.f('ix_ledger_transaction_batch_id'), table_name='ledger_transaction')
    op.drop_table('ledger_transaction')
    op.drop_index(op.f('ix_ggo_subject'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_stored'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_sector'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_retired'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_retire_gsrn'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_public_id'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_parent_id'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_measurement_id'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_issued'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_issue_gsrn'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_id'), table_name='ggo')
    op.drop_index(op.f('ix_ggo_begin'), table_name='ggo')
    op.drop_table('ggo')
    op.drop_index(op.f('ix_meteringpoint_tag_tag'), table_name='meteringpoint_tag')
    op.drop_index(op.f('ix_meteringpoint_tag_meteringpoint_id'), table_name='meteringpoint_tag')
    op.drop_index(op.f('ix_meteringpoint_tag_id'), table_name='meteringpoint_tag')
    op.drop_table('meteringpoint_tag')
    op.drop_index(op.f('ix_measurement_id'), table_name='measurement')
    op.drop_index(op.f('ix_measurement_gsrn'), table_name='measurement')
    op.drop_index(op.f('ix_measurement_begin'), table_name='measurement')
    op.drop_table('measurement')
    op.drop_index(op.f('ix_meteringpoint_type'), table_name='meteringpoint')
    op.drop_index(op.f('ix_meteringpoint_subject'), table_name='meteringpoint')
    op.drop_index(op.f('ix_meteringpoint_sector'), table_name='meteringpoint')
    op.drop_index(op.f('ix_meteringpoint_public_id'), table_name='meteringpoint')
    op.drop_index(op.f('ix_meteringpoint_id'), table_name='meteringpoint')
    op.drop_index(op.f('ix_meteringpoint_gsrn'), table_name='meteringpoint')
    op.drop_table('meteringpoint')
    op.drop_index(op.f('ix_ledger_batch_user_subject'), table_name='ledger_batch')
    op.drop_index(op.f('ix_ledger_batch_id'), table_name='ledger_batch')
    op.drop_table('ledger_batch')
    op.drop_index(op.f('ix_agreements_agreement_user_to_subject'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_user_proposed_subject'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_user_from_subject'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_technologies'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_state'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_public_id'), table_name='agreements_agreement')
    op.drop_index(op.f('ix_agreements_agreement_id'), table_name='agreements_agreement')
    op.drop_table('agreements_agreement')
    op.drop_index(op.f('ix_user_subject'), table_name='user')
    op.drop_index(op.f('ix_user_phone'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_technology_id'), table_name='technology')
    op.drop_table('technology')
    # ### end Alembic commands ###
